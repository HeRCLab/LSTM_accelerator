

================================================================
== Vitis HLS Report for 'sigm'
================================================================
* Date:           Fri Sep 29 18:13:19 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        matrix_test2
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+-----------+------------+
    |  Clock |  Target | Estimated | Uncertainty|
    +--------+---------+-----------+------------+
    |ap_clk  |  0.35 us|  18.514 ns|    94.50 ns|
    +--------+---------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 18.5>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%x_read_1 = read i22 @_ssdm_op_Read.ap_auto.i22, i22 %x_read" [matrix_test2/matrix_test.cc:4]   --->   Operation 2 'read' 'x_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.91ns)   --->   "%icmp_ln7 = icmp_eq  i22 %x_read_1, i22 0" [matrix_test2/matrix_test.cc:7]   --->   Operation 3 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.91> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%tmp = partselect i22 @llvm.part.select.i22, i22 %x_read_1, i32 21, i32 0" [matrix_test2/matrix_test.cc:7]   --->   Operation 4 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i23 @_ssdm_op_BitConcatenate.i23.i1.i22, i1 1, i22 %tmp" [matrix_test2/matrix_test.cc:7]   --->   Operation 5 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%sext_ln7 = sext i23 %tmp_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 6 'sext' 'sext_ln7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp_2 = cttz i32 @llvm.cttz.i32, i32 %sext_ln7, i1 1" [matrix_test2/matrix_test.cc:7]   --->   Operation 7 'cttz' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.01ns)   --->   "%sub_ln7 = sub i32 22, i32 %tmp_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 8 'sub' 'sub_ln7' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%trunc_ln7 = trunc i32 %sub_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 9 'trunc' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.01ns)   --->   "%add_ln7 = add i32 %sub_ln7, i32 4294967243" [matrix_test2/matrix_test.cc:7]   --->   Operation 10 'add' 'add_ln7' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln7, i32 1, i32 31" [matrix_test2/matrix_test.cc:7]   --->   Operation 11 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.00ns)   --->   "%icmp_ln7_1 = icmp_sgt  i31 %tmp_3, i31 0" [matrix_test2/matrix_test.cc:7]   --->   Operation 12 'icmp' 'icmp_ln7_1' <Predicate = true> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%trunc_ln7_1 = trunc i32 %sub_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 13 'trunc' 'trunc_ln7_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.78ns)   --->   "%sub_ln7_3 = sub i5 12, i5 %trunc_ln7_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 14 'sub' 'sub_ln7_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln7_5 = zext i5 %sub_ln7_3" [matrix_test2/matrix_test.cc:7]   --->   Operation 15 'zext' 'zext_ln7_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.68ns)   --->   "%lshr_ln7_2 = lshr i22 4194303, i22 %zext_ln7_5" [matrix_test2/matrix_test.cc:7]   --->   Operation 16 'lshr' 'lshr_ln7_2' <Predicate = true> <Delay = 0.68> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln7_2)   --->   "%and_ln7_3 = and i22 %x_read_1, i22 %lshr_ln7_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 17 'and' 'and_ln7_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.91ns) (out node of the LUT)   --->   "%icmp_ln7_2 = icmp_ne  i22 %and_ln7_3, i22 0" [matrix_test2/matrix_test.cc:7]   --->   Operation 18 'icmp' 'icmp_ln7_2' <Predicate = true> <Delay = 0.91> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.91> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%and_ln7 = and i1 %icmp_ln7_1, i1 %icmp_ln7_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 19 'and' 'and_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln7, i32 31" [matrix_test2/matrix_test.cc:7]   --->   Operation 20 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%xor_ln7 = xor i1 %tmp_8, i1 1" [matrix_test2/matrix_test.cc:7]   --->   Operation 21 'xor' 'xor_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.91ns)   --->   "%add_ln7_1 = add i22 %trunc_ln7, i22 4194251" [matrix_test2/matrix_test.cc:7]   --->   Operation 22 'add' 'add_ln7_1' <Predicate = true> <Delay = 0.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%bit_select_i_i_i = bitselect i1 @_ssdm_op_BitSelect.i1.i22.i22, i22 %x_read_1, i22 %add_ln7_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 23 'bitselect' 'bit_select_i_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%and_ln7_1 = and i1 %bit_select_i_i_i, i1 %xor_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 24 'and' 'and_ln7_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node or_ln7)   --->   "%or_ln7_1 = or i1 %and_ln7_1, i1 %and_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 25 'or' 'or_ln7_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln7 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln7_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 26 'bitconcatenate' 'or_ln7' <Predicate = true> <Delay = 0.28>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i22 %x_read_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 27 'zext' 'zext_ln7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.01ns)   --->   "%icmp_ln7_3 = icmp_sgt  i32 %add_ln7, i32 0" [matrix_test2/matrix_test.cc:7]   --->   Operation 28 'icmp' 'icmp_ln7_3' <Predicate = true> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.01ns)   --->   "%add_ln7_2 = add i32 %sub_ln7, i32 4294967242" [matrix_test2/matrix_test.cc:7]   --->   Operation 29 'add' 'add_ln7_2' <Predicate = (icmp_ln7_3)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln7_1 = zext i32 %add_ln7_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 30 'zext' 'zext_ln7_1' <Predicate = (icmp_ln7_3)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.38ns)   --->   "%lshr_ln7 = lshr i64 %zext_ln7, i64 %zext_ln7_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 31 'lshr' 'lshr_ln7' <Predicate = (icmp_ln7_3)> <Delay = 1.38> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.01ns)   --->   "%sub_ln7_1 = sub i32 54, i32 %sub_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 32 'sub' 'sub_ln7_1' <Predicate = (!icmp_ln7_3)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln7_2 = zext i32 %sub_ln7_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 33 'zext' 'zext_ln7_2' <Predicate = (!icmp_ln7_3)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.38ns)   --->   "%shl_ln7 = shl i64 %zext_ln7, i64 %zext_ln7_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 34 'shl' 'shl_ln7' <Predicate = (!icmp_ln7_3)> <Delay = 1.38> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node add_ln7_3)   --->   "%select_ln7 = select i1 %icmp_ln7_3, i64 %lshr_ln7, i64 %shl_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 35 'select' 'select_ln7' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node add_ln7_3)   --->   "%zext_ln7_3 = zext i2 %or_ln7" [matrix_test2/matrix_test.cc:7]   --->   Operation 36 'zext' 'zext_ln7_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln7_3 = add i64 %select_ln7, i64 %zext_ln7_3" [matrix_test2/matrix_test.cc:7]   --->   Operation 37 'add' 'add_ln7_3' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%lshr_ln7_1 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln7_3, i32 1, i32 63" [matrix_test2/matrix_test.cc:7]   --->   Operation 38 'partselect' 'lshr_ln7_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln7_4 = zext i63 %lshr_ln7_1" [matrix_test2/matrix_test.cc:7]   --->   Operation 39 'zext' 'zext_ln7_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln7_3, i32 54" [matrix_test2/matrix_test.cc:7]   --->   Operation 40 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.38ns)   --->   "%select_ln7_1 = select i1 %tmp_9, i11 1023, i11 1022" [matrix_test2/matrix_test.cc:7]   --->   Operation 41 'select' 'select_ln7_1' <Predicate = true> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln7_2 = trunc i32 %tmp_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 42 'trunc' 'trunc_ln7_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln7_2 = sub i11 5, i11 %trunc_ln7_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 43 'sub' 'sub_ln7_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 44 [1/1] (0.91ns) (root node of TernaryAdder)   --->   "%add_ln7_4 = add i11 %select_ln7_1, i11 %sub_ln7_2" [matrix_test2/matrix_test.cc:7]   --->   Operation 44 'add' 'add_ln7_4' <Predicate = true> <Delay = 0.91> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i11, i1 0, i11 %add_ln7_4" [matrix_test2/matrix_test.cc:7]   --->   Operation 45 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%LD = partset i64 @_ssdm_op_PartSet.i64.i64.i12.i32.i32, i64 %zext_ln7_4, i12 %tmp_5, i32 52, i32 63" [matrix_test2/matrix_test.cc:7]   --->   Operation 46 'partset' 'LD' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%bitcast_ln756 = bitcast i64 %LD" [matrix_test2/matrix_test.cc:7]   --->   Operation 47 'bitcast' 'bitcast_ln756' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln7_3 = partselect i52 @_ssdm_op_PartSelect.i52.i64.i32.i32, i64 %add_ln7_3, i32 1, i32 52" [matrix_test2/matrix_test.cc:7]   --->   Operation 48 'partselect' 'trunc_ln7_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.79ns)   --->   "%icmp_ln7_4 = icmp_ne  i11 %add_ln7_4, i11 2047" [matrix_test2/matrix_test.cc:7]   --->   Operation 49 'icmp' 'icmp_ln7_4' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (1.10ns)   --->   "%icmp_ln7_5 = icmp_eq  i52 %trunc_ln7_3, i52 0" [matrix_test2/matrix_test.cc:7]   --->   Operation 50 'icmp' 'icmp_ln7_5' <Predicate = true> <Delay = 1.10> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.10> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.28ns)   --->   "%or_ln7_2 = or i1 %icmp_ln7_5, i1 %icmp_ln7_4" [matrix_test2/matrix_test.cc:7]   --->   Operation 51 'or' 'or_ln7_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.47ns)   --->   Input mux for Operation 52 '%tmp_4 = fcmp_ogt  i64 %bitcast_ln756, i64 -0.5'
ST_1 : Operation 52 [1/1] (11.2ns)   --->   "%tmp_4 = fcmp_ogt  i64 %bitcast_ln756, i64 -0.5" [matrix_test2/matrix_test.cc:7]   --->   Operation 52 'dcmp' 'tmp_4' <Predicate = (!or_ln13_1)> <Delay = 11.2> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 0> <II = 1> <Delay = 11.7> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_1)   --->   "%and_ln7_2 = and i1 %or_ln7_2, i1 %tmp_4" [matrix_test2/matrix_test.cc:7]   --->   Operation 53 'and' 'and_ln7_2' <Predicate = (!or_ln13_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.47ns)   --->   Input mux for Operation 54 '%tmp_6 = fcmp_ogt  i64 %bitcast_ln756, i64 0.5'
ST_1 : Operation 54 [1/1] (11.2ns)   --->   "%tmp_6 = fcmp_ogt  i64 %bitcast_ln756, i64 0.5" [matrix_test2/matrix_test.cc:10]   --->   Operation 54 'dcmp' 'tmp_6' <Predicate = true> <Delay = 11.2> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 0> <II = 1> <Delay = 11.7> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_2)   --->   "%and_ln10 = and i1 %or_ln7_2, i1 %tmp_6" [matrix_test2/matrix_test.cc:10]   --->   Operation 55 'and' 'and_ln10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : [1/1] (0.47ns)   --->   Input mux for Operation 56 '%tmp_7 = fcmp_olt  i64 %bitcast_ln756, i64 -0.5'
ST_1 : Operation 56 [1/1] (11.2ns)   --->   "%tmp_7 = fcmp_olt  i64 %bitcast_ln756, i64 -0.5" [matrix_test2/matrix_test.cc:13]   --->   Operation 56 'dcmp' 'tmp_7' <Predicate = true> <Delay = 11.2> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 0> <II = 1> <Delay = 11.7> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node or_ln13)   --->   "%and_ln13 = and i1 %or_ln7_2, i1 %tmp_7" [matrix_test2/matrix_test.cc:13]   --->   Operation 57 'and' 'and_ln13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln13 = or i1 %icmp_ln7, i1 %and_ln13" [matrix_test2/matrix_test.cc:13]   --->   Operation 58 'or' 'or_ln13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_2)   --->   "%select_ln13 = select i1 %or_ln13, i22 0, i22 131072" [matrix_test2/matrix_test.cc:13]   --->   Operation 59 'select' 'select_ln13' <Predicate = (or_ln13_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_2)   --->   "%or_ln13_1 = or i1 %or_ln13, i1 %and_ln10" [matrix_test2/matrix_test.cc:13]   --->   Operation 60 'or' 'or_ln13_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.34ns) (out node of the LUT)   --->   "%select_ln13_1 = select i1 %and_ln7_2, i22 0, i22 %x_read_1" [matrix_test2/matrix_test.cc:13]   --->   Operation 61 'select' 'select_ln13_1' <Predicate = (!or_ln13_1)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln13_2 = select i1 %or_ln13_1, i22 %select_ln13, i22 %select_ln13_1" [matrix_test2/matrix_test.cc:13]   --->   Operation 62 'select' 'select_ln13_2' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%ret_ln17 = ret i22 %select_ln13_2" [matrix_test2/matrix_test.cc:17]   --->   Operation 63 'ret' 'ret_ln17' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 350.000ns, clock uncertainty: 94.500ns.

 <State 1>: 18.514ns
The critical path consists of the following:
	wire read operation ('x', matrix_test2/matrix_test.cc:4) on port 'x_read' (matrix_test2/matrix_test.cc:4) [2]  (0.000 ns)
	'cttz' operation ('tmp_2', matrix_test2/matrix_test.cc:7) [7]  (0.000 ns)
	'sub' operation ('sub_ln7', matrix_test2/matrix_test.cc:7) [8]  (1.016 ns)
	'sub' operation ('sub_ln7_3', matrix_test2/matrix_test.cc:7) [14]  (0.789 ns)
	'lshr' operation ('lshr_ln7_2', matrix_test2/matrix_test.cc:7) [16]  (0.680 ns)
	'and' operation ('and_ln7_3', matrix_test2/matrix_test.cc:7) [17]  (0.000 ns)
	'icmp' operation ('icmp_ln7_2', matrix_test2/matrix_test.cc:7) [18]  (0.914 ns)
	'and' operation ('and_ln7', matrix_test2/matrix_test.cc:7) [19]  (0.000 ns)
	'or' operation ('or_ln7_1', matrix_test2/matrix_test.cc:7) [25]  (0.000 ns)
	'add' operation ('add_ln7_3', matrix_test2/matrix_test.cc:7) [37]  (1.085 ns)
	'select' operation ('select_ln7_1', matrix_test2/matrix_test.cc:7) [41]  (0.389 ns)
	'add' operation ('add_ln7_4', matrix_test2/matrix_test.cc:7) [44]  (0.914 ns)
	multiplexor before operation 'dcmp' with delay (0.476 ns)
'dcmp' operation ('tmp_4', matrix_test2/matrix_test.cc:7) [52]  (11.259 ns)
	'and' operation ('and_ln7_2', matrix_test2/matrix_test.cc:7) [53]  (0.000 ns)
	'select' operation ('select_ln13_1', matrix_test2/matrix_test.cc:13) [61]  (0.342 ns)
	'select' operation ('select_ln13_2', matrix_test2/matrix_test.cc:13) [62]  (0.361 ns)
	blocking operation 0.287 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
