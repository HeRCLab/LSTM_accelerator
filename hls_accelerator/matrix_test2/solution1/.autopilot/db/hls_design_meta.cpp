#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("params_address0", 12, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("params_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("params_q0", 22, hls_in, 0, "ap_memory", "in_data", 1),
	Port_Property("params_address1", 12, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("params_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("params_q1", 22, hls_in, 0, "ap_memory", "in_data", 1),
	Port_Property("inp_Addr_A", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("inp_EN_A", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("inp_WEN_A", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("inp_Din_A", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("inp_Dout_A", 32, hls_in, 1, "bram", "in_data", 1),
	Port_Property("inp_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("inp_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("inp_Addr_B", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("inp_EN_B", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("inp_WEN_B", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("inp_Din_B", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("inp_Dout_B", 32, hls_in, 1, "bram", "in_data", 1),
	Port_Property("inp_Clk_B", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("inp_Rst_B", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("out_r_Addr_A", 32, hls_out, 2, "bram", "MemPortADDR2", 1),
	Port_Property("out_r_EN_A", 1, hls_out, 2, "bram", "MemPortCE2", 1),
	Port_Property("out_r_WEN_A", 4, hls_out, 2, "bram", "MemPortWE2", 1),
	Port_Property("out_r_Din_A", 32, hls_out, 2, "bram", "MemPortDIN2", 1),
	Port_Property("out_r_Dout_A", 32, hls_in, 2, "bram", "MemPortDOUT2", 1),
	Port_Property("out_r_Clk_A", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("out_r_Rst_A", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("out_r_Addr_B", 32, hls_out, 2, "bram", "MemPortADDR2", 1),
	Port_Property("out_r_EN_B", 1, hls_out, 2, "bram", "MemPortCE2", 1),
	Port_Property("out_r_WEN_B", 4, hls_out, 2, "bram", "MemPortWE2", 1),
	Port_Property("out_r_Din_B", 32, hls_out, 2, "bram", "MemPortDIN2", 1),
	Port_Property("out_r_Dout_B", 32, hls_in, 2, "bram", "MemPortDOUT2", 1),
	Port_Property("out_r_Clk_B", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("out_r_Rst_B", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("init_params", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("store_result", 32, hls_in, 4, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "network_top";
