-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity network_top_hyper_tan is
port (
    ap_ready : OUT STD_LOGIC;
    z_val : IN STD_LOGIC_VECTOR (11 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of network_top_hyper_tan is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_400 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_const_lv12_C00 : STD_LOGIC_VECTOR (11 downto 0) := "110000000000";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal icmp_ln25_fu_20_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_fu_34_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln35_fu_48_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln35_fu_54_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_40_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln25_fu_26_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    add_ln35_fu_48_p2 <= std_logic_vector(unsigned(z_val) + unsigned(ap_const_lv12_400));
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln31_fu_40_p3 when (icmp_ln35_fu_54_p2(0) = '1') else 
        select_ln25_fu_26_p3;
    icmp_ln25_fu_20_p2 <= "1" when (signed(z_val) < signed(ap_const_lv12_C01)) else "0";
    icmp_ln31_fu_34_p2 <= "1" when (signed(z_val) > signed(ap_const_lv12_400)) else "0";
    icmp_ln35_fu_54_p2 <= "1" when (unsigned(add_ln35_fu_48_p2) > unsigned(ap_const_lv12_800)) else "0";
    select_ln25_fu_26_p3 <= 
        z_val when (icmp_ln25_fu_20_p2(0) = '1') else 
        ap_const_lv12_0;
    select_ln31_fu_40_p3 <= 
        ap_const_lv12_400 when (icmp_ln31_fu_34_p2(0) = '1') else 
        ap_const_lv12_C00;
end behav;
