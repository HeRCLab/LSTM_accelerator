// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module network_top_hyper_tan (
        ap_ready,
        z_val,
        ap_return
);


output   ap_ready;
input  [11:0] z_val;
output  [11:0] ap_return;

wire   [0:0] icmp_ln25_fu_20_p2;
wire   [0:0] icmp_ln31_fu_34_p2;
wire   [11:0] add_ln35_fu_48_p2;
wire   [0:0] icmp_ln35_fu_54_p2;
wire   [11:0] select_ln31_fu_40_p3;
wire   [11:0] select_ln25_fu_26_p3;
wire    ap_ce_reg;

assign add_ln35_fu_48_p2 = (z_val + 12'd1024);

assign ap_ready = 1'b1;

assign icmp_ln25_fu_20_p2 = (($signed(z_val) < $signed(12'd3073)) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_34_p2 = (($signed(z_val) > $signed(12'd1024)) ? 1'b1 : 1'b0);

assign select_ln25_fu_26_p3 = ((icmp_ln25_fu_20_p2[0:0] == 1'b1) ? z_val : 12'd0);

assign select_ln31_fu_40_p3 = ((icmp_ln31_fu_34_p2[0:0] == 1'b1) ? 12'd1024 : 12'd3072);

assign ap_return = ((icmp_ln35_fu_54_p2[0:0] == 1'b1) ? select_ln31_fu_40_p3 : select_ln25_fu_26_p3);

assign icmp_ln35_fu_54_p2 = ((add_ln35_fu_48_p2 > 12'd2048) ? 1'b1 : 1'b0);

endmodule //network_top_hyper_tan
